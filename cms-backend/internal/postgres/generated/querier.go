// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package generated

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	AddEventRegisteredAttedee(ctx context.Context, eventID int64) error
	ChangeVisibilityJobPosting(ctx context.Context, arg ChangeVisibilityJobPostingParams) error
	CheckEventIsPublishedAndUpcomingOrLive(ctx context.Context, eventID int64) (bool, error)
	CheckEventRegistrantExists(ctx context.Context, arg CheckEventRegistrantExistsParams) (bool, error)
	CheckJobApplicationExists(ctx context.Context, arg CheckJobApplicationExistsParams) (bool, error)
	CheckJobPostingIsPublished(ctx context.Context, id int64) (bool, error)
	CountBlogs(ctx context.Context, arg CountBlogsParams) (int64, error)
	CountDepartments(ctx context.Context, search pgtype.Text) (int64, error)
	CountDeviceTokens(ctx context.Context, arg CountDeviceTokensParams) (int64, error)
	CountEventRegistrants(ctx context.Context, eventID int64) (int64, error)
	CountEvents(ctx context.Context, arg CountEventsParams) (int64, error)
	CountJobApplications(ctx context.Context, arg CountJobApplicationsParams) (int64, error)
	CountJobPostings(ctx context.Context, arg CountJobPostingsParams) (int64, error)
	CountNewsLetters(ctx context.Context, arg CountNewsLettersParams) (int64, error)
	CountNewsUpdates(ctx context.Context, arg CountNewsUpdatesParams) (int64, error)
	CountOrders(ctx context.Context, arg CountOrdersParams) (int64, error)
	CountPayments(ctx context.Context, arg CountPaymentsParams) (int64, error)
	CountProductCategories(ctx context.Context, search pgtype.Text) (int64, error)
	CountProducts(ctx context.Context, arg CountProductsParams) (int64, error)
	CountRegistrars(ctx context.Context, arg CountRegistrarsParams) (int64, error)
	CountUserPreferences(ctx context.Context) (int64, error)
	CountUsers(ctx context.Context, arg CountUsersParams) (int64, error)
	CreateBlog(ctx context.Context, arg CreateBlogParams) (int64, error)
	CreateDepartment(ctx context.Context, name string) (int64, error)
	CreateDeviceToken(ctx context.Context, arg CreateDeviceTokenParams) (int64, error)
	CreateEvent(ctx context.Context, arg CreateEventParams) (int64, error)
	CreateEventRegistrant(ctx context.Context, arg CreateEventRegistrantParams) (int64, error)
	CreateJobApplication(ctx context.Context, arg CreateJobApplicationParams) (int64, error)
	CreateJobPosting(ctx context.Context, arg CreateJobPostingParams) (int64, error)
	CreateNewsLetter(ctx context.Context, arg CreateNewsLetterParams) (int64, error)
	CreateNewsUpdate(ctx context.Context, arg CreateNewsUpdateParams) (int64, error)
	CreateOrder(ctx context.Context, arg CreateOrderParams) (int64, error)
	CreateOrderItem(ctx context.Context, arg CreateOrderItemParams) error
	CreatePayment(ctx context.Context, arg CreatePaymentParams) (int64, error)
	CreateProduct(ctx context.Context, arg CreateProductParams) (int64, error)
	CreateProductCategory(ctx context.Context, arg CreateProductCategoryParams) (int64, error)
	CreateRegistrar(ctx context.Context, arg CreateRegistrarParams) (int64, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (int64, error)
	CreateUserPreferences(ctx context.Context, arg CreateUserPreferencesParams) (UserPreference, error)
	DeleteBlog(ctx context.Context, arg DeleteBlogParams) error
	DeleteEvent(ctx context.Context, arg DeleteEventParams) error
	DeleteJobPosting(ctx context.Context, arg DeleteJobPostingParams) error
	DeleteNewsLetter(ctx context.Context, arg DeleteNewsLetterParams) error
	DeleteNewsUpdate(ctx context.Context, arg DeleteNewsUpdateParams) error
	DeleteProduct(ctx context.Context, arg DeleteProductParams) error
	DeleteProductCategory(ctx context.Context, arg DeleteProductCategoryParams) error
	DeleteRegistrar(ctx context.Context, arg DeleteRegistrarParams) error
	DeleteUser(ctx context.Context, arg DeleteUserParams) error
	DepartmentExists(ctx context.Context, id int64) (bool, error)
	EventExists(ctx context.Context, id int64) (bool, error)
	GetBlog(ctx context.Context, id int64) (GetBlogRow, error)
	GetDepartment(ctx context.Context, id int64) (Department, error)
	GetDeviceTokenByID(ctx context.Context, id int64) (GetDeviceTokenByIDRow, error)
	GetDeviceTokenByUserID(ctx context.Context, userID int64) ([]GetDeviceTokenByUserIDRow, error)
	GetEvent(ctx context.Context, id int64) (Event, error)
	GetJobApplication(ctx context.Context, id int64) (GetJobApplicationRow, error)
	GetJobApplicationsByJobID(ctx context.Context, arg GetJobApplicationsByJobIDParams) ([]JobApplication, error)
	GetJobPosting(ctx context.Context, id int64) (GetJobPostingRow, error)
	GetNewsLetter(ctx context.Context, id int64) (NewsLetter, error)
	GetNewsUpdate(ctx context.Context, id int64) (NewsUpdate, error)
	GetNewsUpdateByTopicRelations(ctx context.Context, topic string) ([]NewsUpdate, error)
	GetOrder(ctx context.Context, id int64) (GetOrderRow, error)
	GetPayment(ctx context.Context, id int64) (Payment, error)
	GetProduct(ctx context.Context, id int64) (GetProductRow, error)
	GetProductCategory(ctx context.Context, id int64) (ProductCategory, error)
	GetPublishedBlog(ctx context.Context, id int64) (GetPublishedBlogRow, error)
	GetPublishedEvent(ctx context.Context, id int64) (Event, error)
	GetPublishedJobPosting(ctx context.Context, id int64) (GetPublishedJobPostingRow, error)
	GetPublishedNewsLetter(ctx context.Context, id int64) (NewsLetter, error)
	GetPublishedNewsUpdate(ctx context.Context, id int64) (NewsUpdate, error)
	GetRegistrar(ctx context.Context, id int64) (Registrar, error)
	GetRole(ctx context.Context, id int64) (RbacRole, error)
	GetRoleByName(ctx context.Context, name string) (RbacRole, error)
	GetUser(ctx context.Context, id int64) (GetUserRow, error)
	GetUserInternal(ctx context.Context, email string) (GetUserInternalRow, error)
	GetUserOrderByID(ctx context.Context, arg GetUserOrderByIDParams) (GetUserOrderByIDRow, error)
	GetUserPayment(ctx context.Context, arg GetUserPaymentParams) (Payment, error)
	GetUserPreferences(ctx context.Context, userID int64) (GetUserPreferencesRow, error)
	GetUserRoles(ctx context.Context, userID int64) ([]RbacRole, error)
	GrantRole(ctx context.Context, arg GrantRoleParams) error
	ListBlogs(ctx context.Context, arg ListBlogsParams) ([]ListBlogsRow, error)
	ListDepartments(ctx context.Context, arg ListDepartmentsParams) ([]Department, error)
	ListDeviceTokens(ctx context.Context, arg ListDeviceTokensParams) ([]ListDeviceTokensRow, error)
	ListEventRegistrants(ctx context.Context, arg ListEventRegistrantsParams) ([]EventRegistrant, error)
	ListEvents(ctx context.Context, arg ListEventsParams) ([]Event, error)
	ListJobApplications(ctx context.Context, arg ListJobApplicationsParams) ([]JobApplication, error)
	ListJobPostings(ctx context.Context, arg ListJobPostingsParams) ([]ListJobPostingsRow, error)
	ListNewsLetters(ctx context.Context, arg ListNewsLettersParams) ([]NewsLetter, error)
	ListNewsUpdates(ctx context.Context, arg ListNewsUpdatesParams) ([]NewsUpdate, error)
	ListOrders(ctx context.Context, arg ListOrdersParams) ([]Order, error)
	ListPayments(ctx context.Context, arg ListPaymentsParams) ([]ListPaymentsRow, error)
	ListProductCategories(ctx context.Context, arg ListProductCategoriesParams) ([]ProductCategory, error)
	ListProducts(ctx context.Context, arg ListProductsParams) ([]ListProductsRow, error)
	ListRegistrars(ctx context.Context, arg ListRegistrarsParams) ([]Registrar, error)
	ListUserPreferences(ctx context.Context, arg ListUserPreferencesParams) ([]ListUserPreferencesRow, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]ListUsersRow, error)
	LogAuditLog(ctx context.Context, arg LogAuditLogParams) error
	ProductCategoryExists(ctx context.Context, id int64) (bool, error)
	ProductExists(ctx context.Context, id int64) (bool, error)
	PublishBlog(ctx context.Context, arg PublishBlogParams) error
	PublishEvent(ctx context.Context, arg PublishEventParams) error
	PublishJobPosting(ctx context.Context, arg PublishJobPostingParams) error
	PublishNewsLetter(ctx context.Context, arg PublishNewsLetterParams) error
	PublishNewsUpdate(ctx context.Context, arg PublishNewsUpdateParams) (NewsUpdate, error)
	RemoveUserRoles(ctx context.Context, userID int64) error
	UpdateBlog(ctx context.Context, arg UpdateBlogParams) error
	UpdateDepartment(ctx context.Context, arg UpdateDepartmentParams) error
	UpdateDeviceToken(ctx context.Context, arg UpdateDeviceTokenParams) error
	UpdateEvent(ctx context.Context, arg UpdateEventParams) error
	UpdateJobApplication(ctx context.Context, arg UpdateJobApplicationParams) (JobApplication, error)
	UpdateJobPosting(ctx context.Context, arg UpdateJobPostingParams) error
	UpdateNewsLetter(ctx context.Context, arg UpdateNewsLetterParams) error
	UpdateNewsUpdate(ctx context.Context, arg UpdateNewsUpdateParams) error
	UpdateOrder(ctx context.Context, arg UpdateOrderParams) (Order, error)
	UpdatePayment(ctx context.Context, arg UpdatePaymentParams) (Payment, error)
	UpdateProduct(ctx context.Context, arg UpdateProductParams) (Product, error)
	UpdateProductCategory(ctx context.Context, arg UpdateProductCategoryParams) (ProductCategory, error)
	UpdateProductItemSold(ctx context.Context, arg UpdateProductItemSoldParams) (int64, error)
	UpdateRegistrar(ctx context.Context, arg UpdateRegistrarParams) (Registrar, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
	UpdateUserCredentialsInternal(ctx context.Context, arg UpdateUserCredentialsInternalParams) error
	UpdateUserPreferences(ctx context.Context, arg UpdateUserPreferencesParams) (UserPreference, error)
	UserExists(ctx context.Context, id int64) (bool, error)
	UserHasActiveDeviceToken(ctx context.Context, userID int64) (bool, error)
	UserHasPreferences(ctx context.Context, userID int64) (bool, error)
}

var _ Querier = (*Queries)(nil)
