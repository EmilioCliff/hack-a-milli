// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package generated

import (
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

type Blog struct {
	ID          int64              `json:"id"`
	Title       string             `json:"title"`
	Author      int64              `json:"author"`
	CoverImg    string             `json:"cover_img"`
	Topic       string             `json:"topic"`
	Description string             `json:"description"`
	Content     string             `json:"content"`
	Views       int32              `json:"views"`
	MinRead     int32              `json:"min_read"`
	Published   bool               `json:"published"`
	PublishedAt pgtype.Timestamptz `json:"published_at"`
	UpdatedBy   int64              `json:"updated_by"`
	CreatedBy   int64              `json:"created_by"`
	DeletedBy   pgtype.Int8        `json:"deleted_by"`
	DeletedAt   pgtype.Timestamptz `json:"deleted_at"`
	UpdatedAt   time.Time          `json:"updated_at"`
	CreatedAt   time.Time          `json:"created_at"`
}

type Department struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
}

type DeviceToken struct {
	ID          int64     `json:"id"`
	UserID      int64     `json:"user_id"`
	DeviceToken string    `json:"device_token"`
	Platform    string    `json:"platform"`
	Active      bool      `json:"active"`
	CreatedAt   time.Time `json:"created_at"`
}

type Event struct {
	ID                  int64              `json:"id"`
	Title               string             `json:"title"`
	Topic               string             `json:"topic"`
	Content             string             `json:"content"`
	CoverImg            string             `json:"cover_img"`
	StartTime           string             `json:"start_time"`
	EndTime             string             `json:"end_time"`
	Status              string             `json:"status"`
	Venue               []byte             `json:"venue"`
	Price               string             `json:"price"`
	Agenda              []byte             `json:"agenda"`
	Tags                []string           `json:"tags"`
	Organizers          []byte             `json:"organizers"`
	Partners            []byte             `json:"partners"`
	Speakers            []byte             `json:"speakers"`
	MaxAttendees        int32              `json:"max_attendees"`
	RegisteredAttendees int32              `json:"registered_attendees"`
	Published           bool               `json:"published"`
	PublishedAt         pgtype.Timestamptz `json:"published_at"`
	UpdatedBy           int64              `json:"updated_by"`
	CreatedBy           int64              `json:"created_by"`
	DeletedBy           pgtype.Int8        `json:"deleted_by"`
	DeletedAt           pgtype.Timestamptz `json:"deleted_at"`
	UpdatedAt           time.Time          `json:"updated_at"`
	CreatedAt           time.Time          `json:"created_at"`
}

type EventRegistrant struct {
	ID           int64     `json:"id"`
	EventID      int64     `json:"event_id"`
	Name         string    `json:"name"`
	Email        string    `json:"email"`
	RegisteredAt time.Time `json:"registered_at"`
}

type JobApplication struct {
	ID          int64       `json:"id"`
	JobID       int64       `json:"job_id"`
	FullName    string      `json:"full_name"`
	Email       string      `json:"email"`
	PhoneNumber string      `json:"phone_number"`
	CoverLetter string      `json:"cover_letter"`
	ResumeUrl   string      `json:"resume_url"`
	Status      string      `json:"status"`
	Comment     pgtype.Text `json:"comment"`
	SubmittedAt time.Time   `json:"submitted_at"`
	UpdatedBy   pgtype.Int8 `json:"updated_by"`
	UpdatedAt   time.Time   `json:"updated_at"`
	CreatedAt   time.Time   `json:"created_at"`
}

type JobPosting struct {
	ID             int64              `json:"id"`
	Title          string             `json:"title"`
	DepartmentID   int64              `json:"department_id"`
	Location       string             `json:"location"`
	EmploymentType string             `json:"employment_type"`
	Content        string             `json:"content"`
	SalaryRange    pgtype.Text        `json:"salary_range"`
	StartDate      time.Time          `json:"start_date"`
	EndDate        time.Time          `json:"end_date"`
	ShowCase       bool               `json:"show_case"`
	Published      bool               `json:"published"`
	PublishedAt    pgtype.Timestamptz `json:"published_at"`
	UpdatedBy      int64              `json:"updated_by"`
	CreatedBy      int64              `json:"created_by"`
	DeletedBy      pgtype.Int8        `json:"deleted_by"`
	DeletedAt      pgtype.Timestamptz `json:"deleted_at"`
	UpdatedAt      time.Time          `json:"updated_at"`
	CreatedAt      time.Time          `json:"created_at"`
}

type NewsLetter struct {
	ID          int64              `json:"id"`
	Title       string             `json:"title"`
	Description string             `json:"description"`
	PdfUrl      string             `json:"pdf_url"`
	Date        time.Time          `json:"date"`
	Published   bool               `json:"published"`
	PublishedAt pgtype.Timestamptz `json:"published_at"`
	UpdatedBy   int64              `json:"updated_by"`
	CreatedBy   int64              `json:"created_by"`
	DeletedBy   pgtype.Int8        `json:"deleted_by"`
	DeletedAt   pgtype.Timestamptz `json:"deleted_at"`
	UpdatedAt   time.Time          `json:"updated_at"`
	CreatedAt   time.Time          `json:"created_at"`
}

type NewsUpdate struct {
	ID          int64              `json:"id"`
	Title       string             `json:"title"`
	Topic       string             `json:"topic"`
	Date        time.Time          `json:"date"`
	MinRead     int32              `json:"min_read"`
	Content     string             `json:"content"`
	CoverImg    string             `json:"cover_img"`
	Published   bool               `json:"published"`
	PublishedAt pgtype.Timestamptz `json:"published_at"`
	UpdatedBy   int64              `json:"updated_by"`
	CreatedBy   int64              `json:"created_by"`
	DeletedBy   pgtype.Int8        `json:"deleted_by"`
	DeletedAt   pgtype.Timestamptz `json:"deleted_at"`
	UpdatedAt   time.Time          `json:"updated_at"`
	CreatedAt   time.Time          `json:"created_at"`
}

type Order struct {
	ID            int64          `json:"id"`
	UserID        pgtype.Int8    `json:"user_id"`
	Amount        pgtype.Numeric `json:"amount"`
	Status        string         `json:"status"`
	PaymentStatus bool           `json:"payment_status"`
	OrderDetails  []byte         `json:"order_details"`
	UpdatedBy     pgtype.Int8    `json:"updated_by"`
	UpdatedAt     time.Time      `json:"updated_at"`
	CreatedAt     time.Time      `json:"created_at"`
}

type OrderItem struct {
	OrderID   int64          `json:"order_id"`
	ProductID int64          `json:"product_id"`
	Size      string         `json:"size"`
	Color     string         `json:"color"`
	Quantity  int32          `json:"quantity"`
	Amount    pgtype.Numeric `json:"amount"`
}

type Payment struct {
	ID            int64          `json:"id"`
	OrderID       int64          `json:"order_id"`
	UserID        pgtype.Int8    `json:"user_id"`
	PaymentMethod string         `json:"payment_method"`
	Amount        pgtype.Numeric `json:"amount"`
	Status        bool           `json:"status"`
	UpdatedBy     pgtype.Int8    `json:"updated_by"`
	CreatedBy     pgtype.Int8    `json:"created_by"`
	UpdatedAt     time.Time      `json:"updated_at"`
	CreatedAt     time.Time      `json:"created_at"`
}

type Product struct {
	ID          int64              `json:"id"`
	CategoryID  int64              `json:"category_id"`
	Name        string             `json:"name"`
	Price       pgtype.Numeric     `json:"price"`
	ImageUrl    []string           `json:"image_url"`
	Description pgtype.Text        `json:"description"`
	ItemsSold   int32              `json:"items_sold"`
	UpdatedBy   int64              `json:"updated_by"`
	CreatedBy   int64              `json:"created_by"`
	DeletedBy   pgtype.Int8        `json:"deleted_by"`
	DeletedAt   pgtype.Timestamptz `json:"deleted_at"`
	UpdatedAt   time.Time          `json:"updated_at"`
	CreatedAt   time.Time          `json:"created_at"`
}

type ProductCategory struct {
	ID          int64              `json:"id"`
	Name        string             `json:"name"`
	Description pgtype.Text        `json:"description"`
	CreatedBy   int64              `json:"created_by"`
	UpdatedBy   int64              `json:"updated_by"`
	DeletedBy   pgtype.Int8        `json:"deleted_by"`
	DeletedAt   pgtype.Timestamptz `json:"deleted_at"`
	UpdatedAt   time.Time          `json:"updated_at"`
	CreatedAt   time.Time          `json:"created_at"`
}

type Registrar struct {
	ID           int64              `json:"id"`
	Email        string             `json:"email"`
	Name         string             `json:"name"`
	LogoUrl      string             `json:"logo_url"`
	Address      string             `json:"address"`
	Specialities []string           `json:"specialities"`
	PhoneNumber  string             `json:"phone_number"`
	WebsiteUrl   string             `json:"website_url"`
	UpdatedBy    int64              `json:"updated_by"`
	CreatedBy    int64              `json:"created_by"`
	DeletedBy    pgtype.Int8        `json:"deleted_by"`
	DeletedAt    pgtype.Timestamptz `json:"deleted_at"`
	UpdatedAt    time.Time          `json:"updated_at"`
	CreatedAt    time.Time          `json:"created_at"`
}

type User struct {
	ID                        int64       `json:"id"`
	Email                     string      `json:"email"`
	FullName                  string      `json:"full_name"`
	PhoneNumber               string      `json:"phone_number"`
	Address                   pgtype.Text `json:"address"`
	PasswordHash              string      `json:"password_hash"`
	Role                      []string    `json:"role"`
	DepartmentID              pgtype.Int8 `json:"department_id"`
	Active                    bool        `json:"active"`
	AccountVerified           bool        `json:"account_verified"`
	MultifactorAuthentication bool        `json:"multifactor_authentication"`
	RefreshToken              string      `json:"refresh_token"`
	UpdatedBy                 pgtype.Int8 `json:"updated_by"`
	CreatedBy                 pgtype.Int8 `json:"created_by"`
	UpdatedAt                 time.Time   `json:"updated_at"`
	CreatedAt                 time.Time   `json:"created_at"`
}

type UserPreference struct {
	UserID         int64     `json:"user_id"`
	NotifyNews     bool      `json:"notify_news"`
	NotifyEvents   bool      `json:"notify_events"`
	NotifyTraining bool      `json:"notify_training"`
	NotifyPolicy   bool      `json:"notify_policy"`
	UpdatedAt      time.Time `json:"updated_at"`
	CreatedAt      time.Time `json:"created_at"`
}
